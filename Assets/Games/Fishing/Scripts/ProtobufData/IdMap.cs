//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: IdMap.proto
namespace com.QH.QPGame.Fishing
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"IdPair")]
  public partial class IdPair : global::ProtoBuf.IExtensible
  {
    public IdPair() {}
    
    private string _idStr = "";
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"idStr", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue("")]
    public string idStr
    {
      get { return _idStr; }
      set { _idStr = value; }
    }
    private uint _idUInt = default(uint);
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"idUInt", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(uint))]
    public uint idUInt
    {
      get { return _idUInt; }
      set { _idUInt = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"IdPak")]
  public partial class IdPak : global::ProtoBuf.IExtensible
  {
    public IdPak() {}
    
    private readonly global::System.Collections.Generic.List<IdPair> _idPair = new global::System.Collections.Generic.List<IdPair>();
    [global::ProtoBuf.ProtoMember(1, Name=@"idPair", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<IdPair> idPair
    {
      get { return _idPair; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}